import React from 'react';
import { Customer, OnboardingStatus } from '../../types/index';
import CustomerForm from './CustomerForm'; // Import CustomerForm

interface AddCustomerFormProps {
  onAddCustomer: (customerData: Omit<Customer, 'id' | 'createdAt' | 'updatedAt' | '_etag'>) => Promise<void>; // Changed return type to Promise<void>
  onCancel: () => void;
}

const AddCustomerForm: React.FC<AddCustomerFormProps> = ({ onAddCustomer, onCancel }) => {
  const handleSubmit = (customer: Customer) => {
    // Ensure only relevant fields are passed to onAddCustomer
    onAddCustomer({
      name: customer.name,
      email: customer.email,
      company: customer.company,
      onboardingStatus: customer.onboardingStatus,
      notes: [], // Initialize notes
      contacts: [], // Initialize contacts
      tenants: [], // Initialize tenants
      accountManager: customer.accountManager, // Include accountManager
      supportPlan: customer.supportPlan, // Include supportPlan
    });
  };

  // Provide default values for a new customer
  const defaultNewCustomer: Customer = {
    id: '', // Will be generated by parent
    name: '',
    email: '',
    company: '',
    onboardingStatus: OnboardingStatus.NOT_STARTED,
    notes: [],
    contacts: [],
    tenants: [],
    createdAt: new Date().toISOString(), // Will be set by parent
    updatedAt: new Date().toISOString(), // Will be set by parent
    accountManager: '', // Default for new customer
    supportPlan: undefined, // Default for new customer
  };

  return (
    <div className="space-y-4">
      <h2 className="text-lg font-semibold mb-2 text-gray-800 dark:text-gray-200">Add New Customer</h2>
      <CustomerForm
        onSubmit={handleSubmit}
        initialCustomer={defaultNewCustomer} // Pass default values for a new customer
      />
      <div className="flex justify-end space-x-3 pt-2">
        <button
          type="button"
          onClick={onCancel}
          className="px-4 py-2 text-sm font-medium text-[var(--text-color-light)] dark:text-[var(--text-color-dark)] bg-[var(--background-light-light)] hover:bg-[color-mix(in srgb, var(--background-light-light) 90%, black)] dark:bg-[var(--background-light-dark)] dark:hover:bg-[color-mix(in srgb, var(--background-light-dark) 90%, black)] rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[var(--text-color-light)] opacity-70 dark:focus:ring-[var(--text-color-dark)] opacity-70 transition-colors"
        >
          Cancel
        </button>
      </div>
    </div>
  );
};

export default AddCustomerForm;
